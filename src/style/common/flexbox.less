
/*
    MIXINS
*/

.clearfix {
    *zoom: 1;
    &:after,
    &:before {
        display: table;
        content: "";
        line-height: 0;
    }
    &:after {
        clear: both;
    }
}

.flexbox(@dir:row, @justifycontent:flex-start) {
    
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    .flexdirection(@dir);
    .flexjustify(@justifycontent);
    .no-flexboxlegacy & {
        .clearfix();
        > * {
            float: left;
        }
    }
}
.flexdirection(@dir:row) when(@dir = row) {
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
    -ms-box-orient: horizontal;
}
.flexdirection(@dir:row) when(@dir = column) {
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
    -ms-box-orient: vertical;
}
.flexdirection(@dir) {
    -webkit-flex-direction: @dir;
    -ms-flex-direction: @dir;
    flex-direction: @dir;
}
.flexjustify(@jc:flex-start) when(@jc = flex-start) {
    -webkit-box-pack: start;
    -moz-box-pack: start;
    -ms-box-pack: start;
}
.flexjustify(@jc:flex-start) when(@jc = flex-end) {
    -webkit-box-pack: end;
    -moz-box-pack: end;
    -ms-box-pack: end;
}
.flexjustify(@jc:flex-start) when(@jc = space-between) {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -ms-box-pack: justify;
}
.flexjustify(@jc) {
    -webkit-justify-content: @jc;
    justify-content: @jc;
}
.flex(@var:1, @total: 1) {
    -webkit-box-flex: @var;
    -moz-box-flex: @var;
    -webkit-flex: @var;
    -ms-flex: @var;
    flex: @var;
    .no-flexbox & {
        width: @var/@total*100%;
    }
}
.order(@number) {
    -webkit-box-ordinal-group: @number;
    -moz-box-ordinal-group: @number;
    -ms-flex-order: @number;
    -webkit-order: @number;
    order: @number;
}
